package com.example.dailynotes.notecreate

import android.app.Application
import android.os.Bundle
import android.provider.ContactsContract
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.databinding.DataBindingUtil
import androidx.lifecycle.Observer
import androidx.lifecycle.ViewModelProvider
import androidx.navigation.fragment.findNavController

import com.example.dailynotes.R
import com.example.dailynotes.databinding.NotesCreateFragmentBinding
import com.example.dailynotes.database.Notes
import com.example.dailynotes.database.NotesDao
import com.example.dailynotes.database.NotesDatabase

/**
 * A simple [Fragment] subclass.
 */
class NotesCreateFragment : Fragment() {

    private lateinit var notesCreateViewModel: NotesCreateViewModel

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        val binding: NotesCreateFragmentBinding = DataBindingUtil.inflate(inflater,R.layout.notes_create_fragment,container,false)

        val application: Application = requireNotNull(this.activity).application
        val datasource: NotesDao = NotesDatabase.getInstance(application).notesDao
        val viewModelFactory = NotesCreateViewModelFactory(datasource,application)

        notesCreateViewModel = ViewModelProvider(this,viewModelFactory).get(NotesCreateViewModel::class.java)

        binding.lifecycleOwner = this

        binding.notesCreateViewModel = notesCreateViewModel

        binding.floatingDoneButton.setOnClickListener(View.OnClickListener {
            var title: String = binding.titleEditText.toString()
            var detail: String = binding.notesEditText.toString()
            //Why we need to add Id eventhough it is autoGenerated
            var note = Notes(title,detail)
            notesCreateViewModel.onAdded(note)
        })


        notesCreateViewModel.navigateToNotesDisplay.observe(viewLifecycleOwner, Observer {
            if(it)
            {
                findNavController().navigate(R.id.action_notesCreateFragment_to_notesDisplayFragment)
                notesCreateViewModel.onNavigateToNotesDisplayComplete()
            }
        })

        return  binding.root


    }



}
